#!markdown

# Hello we will be building things

#!csharp

#!connect signalr --kernel-name pi-top --hub-url http://YOUR_ENDPOINT/kernelhub

#!csharp

#!pi-top
#r "nuget:pi-top"
#r "nuget:pi-top.FoundationKit"
#r "nuget:SixLabors.Fonts,1.0.0-beta0010"

#!csharp

#!pi-top
using PiTop;
using PiTop.MakerArchitecture.Foundation;
using PiTop.MakerArchitecture.Foundation.Components;
using PiTop.MakerArchitecture.Foundation.Sensors;

using SixLabors.ImageSharp;
using SixLabors.ImageSharp.Drawing;
using SixLabors.ImageSharp.Drawing.Processing;
using SixLabors.Fonts;

#!csharp

#!pi-top
var board = PiTop4Board.Instance;
var plate = board.GetOrCreatePlate<FoundationPlate>();

#!csharp

#!pi-top
var builtinDisplay = board.Display;

#!csharp

#!pi-top
var font =  SystemFonts.Collection.Find("Roboto").CreateFont(10);
board.Display.Draw((context, _) => {
                        context.Clear(Color.Black);
                        var rect = TextMeasurer.Measure("Diego was here", new RendererOptions(font));
                        var x = (board.Display.Width - rect.Width) / 2;
                        var y = (board.Display.Height + (rect.Height)) / 2;
                        context.DrawText("Hello\nWorld",font, Color.White, new PointF(0,0));
                    });

#!csharp

#!pi-top
display(builtinDisplay, "text/html");

#!csharp

#!pi-top
 board.Display.Draw((d, _) =>
            {
                d.Clear(Color.Black);
                var square = new RectangularPolygon( 0,  0,  board.Display.Width/2,  board.Display.Height/2);
     
                d.Fill(Color.White, square);
            });

#!csharp

#!pi-top
board.Dispose();
